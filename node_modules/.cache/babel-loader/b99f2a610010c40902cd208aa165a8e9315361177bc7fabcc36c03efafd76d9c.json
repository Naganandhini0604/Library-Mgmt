{"ast":null,"code":"'use strict';\n\nconst get = require('../get');\nconst utils = require('../../utils');\n\n/**\n * Given a Mongoose index definition (key + options objects) and a MongoDB server\n * index definition, determine if the two indexes are equal.\n *\n * @param {Object} key the Mongoose index spec\n * @param {Object} options the Mongoose index definition's options\n * @param {Object} dbIndex the index in MongoDB as returned by `listIndexes()`\n * @api private\n */\n\nmodule.exports = function isIndexEqual(key, options, dbIndex) {\n  // Special case: text indexes have a special format in the db. For example,\n  // `{ name: 'text' }` becomes:\n  // {\n  //   v: 2,\n  //   key: { _fts: 'text', _ftsx: 1 },\n  //   name: 'name_text',\n  //   ns: 'test.tests',\n  //   background: true,\n  //   weights: { name: 1 },\n  //   default_language: 'english',\n  //   language_override: 'language',\n  //   textIndexVersion: 3\n  // }\n  if (dbIndex.textIndexVersion != null) {\n    const weights = dbIndex.weights;\n    if (Object.keys(weights).length !== Object.keys(key).length) {\n      return false;\n    }\n    for (const prop of Object.keys(weights)) {\n      if (!(prop in key)) {\n        return false;\n      }\n      const weight = weights[prop];\n      if (weight !== get(options, 'weights.' + prop) && !(weight === 1 && get(options, 'weights.' + prop) == null)) {\n        return false;\n      }\n    }\n    if (options['default_language'] !== dbIndex['default_language']) {\n      return dbIndex['default_language'] === 'english' && options['default_language'] == null;\n    }\n    return true;\n  }\n  const optionKeys = ['unique', 'partialFilterExpression', 'sparse', 'expireAfterSeconds', 'collation'];\n  for (const key of optionKeys) {\n    if (!(key in options) && !(key in dbIndex)) {\n      continue;\n    }\n    if (key === 'collation') {\n      if (options[key] == null || dbIndex[key] == null) {\n        return options[key] == null && dbIndex[key] == null;\n      }\n      const definedKeys = Object.keys(options.collation);\n      const schemaCollation = options.collation;\n      const dbCollation = dbIndex.collation;\n      for (const opt of definedKeys) {\n        if (get(schemaCollation, opt) !== get(dbCollation, opt)) {\n          return false;\n        }\n      }\n    } else if (!utils.deepEqual(options[key], dbIndex[key])) {\n      return false;\n    }\n  }\n  const schemaIndexKeys = Object.keys(key);\n  const dbIndexKeys = Object.keys(dbIndex.key);\n  if (schemaIndexKeys.length !== dbIndexKeys.length) {\n    return false;\n  }\n  for (let i = 0; i < schemaIndexKeys.length; ++i) {\n    if (schemaIndexKeys[i] !== dbIndexKeys[i]) {\n      return false;\n    }\n    if (!utils.deepEqual(key[schemaIndexKeys[i]], dbIndex.key[dbIndexKeys[i]])) {\n      return false;\n    }\n  }\n  return true;\n};","map":{"version":3,"names":["get","require","utils","module","exports","isIndexEqual","key","options","dbIndex","textIndexVersion","weights","Object","keys","length","prop","weight","optionKeys","definedKeys","collation","schemaCollation","dbCollation","opt","deepEqual","schemaIndexKeys","dbIndexKeys","i"],"sources":["/home/ctl/Documents/nodejs/node_modules/mongoose/lib/helpers/indexes/isIndexEqual.js"],"sourcesContent":["'use strict';\n\nconst get = require('../get');\nconst utils = require('../../utils');\n\n/**\n * Given a Mongoose index definition (key + options objects) and a MongoDB server\n * index definition, determine if the two indexes are equal.\n *\n * @param {Object} key the Mongoose index spec\n * @param {Object} options the Mongoose index definition's options\n * @param {Object} dbIndex the index in MongoDB as returned by `listIndexes()`\n * @api private\n */\n\nmodule.exports = function isIndexEqual(key, options, dbIndex) {\n  // Special case: text indexes have a special format in the db. For example,\n  // `{ name: 'text' }` becomes:\n  // {\n  //   v: 2,\n  //   key: { _fts: 'text', _ftsx: 1 },\n  //   name: 'name_text',\n  //   ns: 'test.tests',\n  //   background: true,\n  //   weights: { name: 1 },\n  //   default_language: 'english',\n  //   language_override: 'language',\n  //   textIndexVersion: 3\n  // }\n  if (dbIndex.textIndexVersion != null) {\n    const weights = dbIndex.weights;\n    if (Object.keys(weights).length !== Object.keys(key).length) {\n      return false;\n    }\n    for (const prop of Object.keys(weights)) {\n      if (!(prop in key)) {\n        return false;\n      }\n      const weight = weights[prop];\n      if (weight !== get(options, 'weights.' + prop) && !(weight === 1 && get(options, 'weights.' + prop) == null)) {\n        return false;\n      }\n    }\n\n    if (options['default_language'] !== dbIndex['default_language']) {\n      return dbIndex['default_language'] === 'english' && options['default_language'] == null;\n    }\n\n    return true;\n  }\n\n  const optionKeys = [\n    'unique',\n    'partialFilterExpression',\n    'sparse',\n    'expireAfterSeconds',\n    'collation'\n  ];\n  for (const key of optionKeys) {\n    if (!(key in options) && !(key in dbIndex)) {\n      continue;\n    }\n    if (key === 'collation') {\n      if (options[key] == null || dbIndex[key] == null) {\n        return options[key] == null && dbIndex[key] == null;\n      }\n      const definedKeys = Object.keys(options.collation);\n      const schemaCollation = options.collation;\n      const dbCollation = dbIndex.collation;\n      for (const opt of definedKeys) {\n        if (get(schemaCollation, opt) !== get(dbCollation, opt)) {\n          return false;\n        }\n      }\n    } else if (!utils.deepEqual(options[key], dbIndex[key])) {\n      return false;\n    }\n  }\n\n  const schemaIndexKeys = Object.keys(key);\n  const dbIndexKeys = Object.keys(dbIndex.key);\n  if (schemaIndexKeys.length !== dbIndexKeys.length) {\n    return false;\n  }\n  for (let i = 0; i < schemaIndexKeys.length; ++i) {\n    if (schemaIndexKeys[i] !== dbIndexKeys[i]) {\n      return false;\n    }\n    if (!utils.deepEqual(key[schemaIndexKeys[i]], dbIndex.key[dbIndexKeys[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}