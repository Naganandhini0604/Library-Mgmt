{"ast":null,"code":"/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst Binary = require('../driver').get().Binary;\nconst utils = require('../utils');\nconst Buffer = require('safe-buffer').Buffer;\n\n/**\n * Mongoose Buffer constructor.\n *\n * Values always have to be passed to the constructor to initialize.\n *\n * @param {Buffer} value\n * @param {String} encode\n * @param {Number} offset\n * @api private\n * @inherits Buffer\n * @see http://bit.ly/f6CnZU\n */\n\nfunction MongooseBuffer(value, encode, offset) {\n  const length = arguments.length;\n  let val;\n  if (length === 0 || arguments[0] === null || arguments[0] === undefined) {\n    val = 0;\n  } else {\n    val = value;\n  }\n  let encoding;\n  let path;\n  let doc;\n  if (Array.isArray(encode)) {\n    // internal casting\n    path = encode[0];\n    doc = encode[1];\n  } else {\n    encoding = encode;\n  }\n  let buf;\n  if (typeof val === 'number' || val instanceof Number) {\n    buf = Buffer.alloc(val);\n  } else {\n    // string, array or object { type: 'Buffer', data: [...] }\n    buf = Buffer.from(val, encoding, offset);\n  }\n  utils.decorate(buf, MongooseBuffer.mixin);\n  buf.isMongooseBuffer = true;\n\n  // make sure these internal props don't show up in Object.keys()\n  buf[MongooseBuffer.pathSymbol] = path;\n  buf[parentSymbol] = doc;\n  buf._subtype = 0;\n  return buf;\n}\nconst pathSymbol = Symbol.for('mongoose#Buffer#_path');\nconst parentSymbol = Symbol.for('mongoose#Buffer#_parent');\nMongooseBuffer.pathSymbol = pathSymbol;\n\n/*!\n * Inherit from Buffer.\n */\n\nMongooseBuffer.mixin = {\n  /**\n   * Default subtype for the Binary representing this Buffer\n   *\n   * @api private\n   * @property _subtype\n   * @receiver MongooseBuffer\n   */\n\n  _subtype: undefined,\n  /**\n   * Marks this buffer as modified.\n   *\n   * @api private\n   * @method _markModified\n   * @receiver MongooseBuffer\n   */\n\n  _markModified: function () {\n    const parent = this[parentSymbol];\n    if (parent) {\n      parent.markModified(this[MongooseBuffer.pathSymbol]);\n    }\n    return this;\n  },\n  /**\n   * Writes the buffer.\n   *\n   * @api public\n   * @method write\n   * @receiver MongooseBuffer\n   */\n\n  write: function () {\n    const written = Buffer.prototype.write.apply(this, arguments);\n    if (written > 0) {\n      this._markModified();\n    }\n    return written;\n  },\n  /**\n   * Copies the buffer.\n   *\n   * ####Note:\n   *\n   * `Buffer#copy` does not mark `target` as modified so you must copy from a `MongooseBuffer` for it to work as expected. This is a work around since `copy` modifies the target, not this.\n   *\n   * @return {Number} The number of bytes copied.\n   * @param {Buffer} target\n   * @method copy\n   * @receiver MongooseBuffer\n   */\n\n  copy: function (target) {\n    const ret = Buffer.prototype.copy.apply(this, arguments);\n    if (target && target.isMongooseBuffer) {\n      target._markModified();\n    }\n    return ret;\n  }\n};\n\n/*!\n * Compile other Buffer methods marking this buffer as modified.\n */\n\n(\n// node < 0.5\n'writeUInt8 writeUInt16 writeUInt32 writeInt8 writeInt16 writeInt32 ' + 'writeFloat writeDouble fill ' + 'utf8Write binaryWrite asciiWrite set ' +\n// node >= 0.5\n'writeUInt16LE writeUInt16BE writeUInt32LE writeUInt32BE ' + 'writeInt16LE writeInt16BE writeInt32LE writeInt32BE ' + 'writeFloatLE writeFloatBE writeDoubleLE writeDoubleBE').split(' ').forEach(function (method) {\n  if (!Buffer.prototype[method]) {\n    return;\n  }\n  MongooseBuffer.mixin[method] = function () {\n    const ret = Buffer.prototype[method].apply(this, arguments);\n    this._markModified();\n    return ret;\n  };\n});\n\n/**\n * Converts this buffer to its Binary type representation.\n *\n * ####SubTypes:\n *\n *   const bson = require('bson')\n *   bson.BSON_BINARY_SUBTYPE_DEFAULT\n *   bson.BSON_BINARY_SUBTYPE_FUNCTION\n *   bson.BSON_BINARY_SUBTYPE_BYTE_ARRAY\n *   bson.BSON_BINARY_SUBTYPE_UUID\n *   bson.BSON_BINARY_SUBTYPE_MD5\n *   bson.BSON_BINARY_SUBTYPE_USER_DEFINED\n *\n *   doc.buffer.toObject(bson.BSON_BINARY_SUBTYPE_USER_DEFINED);\n *\n * @see http://bsonspec.org/#/specification\n * @param {Hex} [subtype]\n * @return {Binary}\n * @api public\n * @method toObject\n * @receiver MongooseBuffer\n */\n\nMongooseBuffer.mixin.toObject = function (options) {\n  const subtype = typeof options === 'number' ? options : this._subtype || 0;\n  return new Binary(Buffer.from(this), subtype);\n};\n\n/**\n * Converts this buffer for storage in MongoDB, including subtype\n *\n * @return {Binary}\n * @api public\n * @method toBSON\n * @receiver MongooseBuffer\n */\n\nMongooseBuffer.mixin.toBSON = function () {\n  return new Binary(this, this._subtype || 0);\n};\n\n/**\n * Determines if this buffer is equals to `other` buffer\n *\n * @param {Buffer} other\n * @return {Boolean}\n * @method equals\n * @receiver MongooseBuffer\n */\n\nMongooseBuffer.mixin.equals = function (other) {\n  if (!Buffer.isBuffer(other)) {\n    return false;\n  }\n  if (this.length !== other.length) {\n    return false;\n  }\n  for (let i = 0; i < this.length; ++i) {\n    if (this[i] !== other[i]) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Sets the subtype option and marks the buffer modified.\n *\n * ####SubTypes:\n *\n *   const bson = require('bson')\n *   bson.BSON_BINARY_SUBTYPE_DEFAULT\n *   bson.BSON_BINARY_SUBTYPE_FUNCTION\n *   bson.BSON_BINARY_SUBTYPE_BYTE_ARRAY\n *   bson.BSON_BINARY_SUBTYPE_UUID\n *   bson.BSON_BINARY_SUBTYPE_MD5\n *   bson.BSON_BINARY_SUBTYPE_USER_DEFINED\n *\n *   doc.buffer.subtype(bson.BSON_BINARY_SUBTYPE_UUID);\n *\n * @see http://bsonspec.org/#/specification\n * @param {Hex} subtype\n * @api public\n * @method subtype\n * @receiver MongooseBuffer\n */\n\nMongooseBuffer.mixin.subtype = function (subtype) {\n  if (typeof subtype !== 'number') {\n    throw new TypeError('Invalid subtype. Expected a number');\n  }\n  if (this._subtype !== subtype) {\n    this._markModified();\n  }\n  this._subtype = subtype;\n};\n\n/*!\n * Module exports.\n */\n\nMongooseBuffer.Binary = Binary;\nmodule.exports = MongooseBuffer;","map":{"version":3,"names":["Binary","require","get","utils","Buffer","MongooseBuffer","value","encode","offset","length","arguments","val","undefined","encoding","path","doc","Array","isArray","buf","Number","alloc","from","decorate","mixin","isMongooseBuffer","pathSymbol","parentSymbol","_subtype","Symbol","for","_markModified","parent","markModified","write","written","prototype","apply","copy","target","ret","split","forEach","method","toObject","options","subtype","toBSON","equals","other","isBuffer","i","TypeError","module","exports"],"sources":["/home/ctl/Documents/nodejs/node_modules/mongoose/lib/types/buffer.js"],"sourcesContent":["/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst Binary = require('../driver').get().Binary;\nconst utils = require('../utils');\nconst Buffer = require('safe-buffer').Buffer;\n\n/**\n * Mongoose Buffer constructor.\n *\n * Values always have to be passed to the constructor to initialize.\n *\n * @param {Buffer} value\n * @param {String} encode\n * @param {Number} offset\n * @api private\n * @inherits Buffer\n * @see http://bit.ly/f6CnZU\n */\n\nfunction MongooseBuffer(value, encode, offset) {\n  const length = arguments.length;\n  let val;\n\n  if (length === 0 || arguments[0] === null || arguments[0] === undefined) {\n    val = 0;\n  } else {\n    val = value;\n  }\n\n  let encoding;\n  let path;\n  let doc;\n\n  if (Array.isArray(encode)) {\n    // internal casting\n    path = encode[0];\n    doc = encode[1];\n  } else {\n    encoding = encode;\n  }\n\n  let buf;\n  if (typeof val === 'number' || val instanceof Number) {\n    buf = Buffer.alloc(val);\n  } else { // string, array or object { type: 'Buffer', data: [...] }\n    buf = Buffer.from(val, encoding, offset);\n  }\n  utils.decorate(buf, MongooseBuffer.mixin);\n  buf.isMongooseBuffer = true;\n\n  // make sure these internal props don't show up in Object.keys()\n  buf[MongooseBuffer.pathSymbol] = path;\n  buf[parentSymbol] = doc;\n\n  buf._subtype = 0;\n  return buf;\n}\n\nconst pathSymbol = Symbol.for('mongoose#Buffer#_path');\nconst parentSymbol = Symbol.for('mongoose#Buffer#_parent');\nMongooseBuffer.pathSymbol = pathSymbol;\n\n/*!\n * Inherit from Buffer.\n */\n\nMongooseBuffer.mixin = {\n\n  /**\n   * Default subtype for the Binary representing this Buffer\n   *\n   * @api private\n   * @property _subtype\n   * @receiver MongooseBuffer\n   */\n\n  _subtype: undefined,\n\n  /**\n   * Marks this buffer as modified.\n   *\n   * @api private\n   * @method _markModified\n   * @receiver MongooseBuffer\n   */\n\n  _markModified: function() {\n    const parent = this[parentSymbol];\n\n    if (parent) {\n      parent.markModified(this[MongooseBuffer.pathSymbol]);\n    }\n    return this;\n  },\n\n  /**\n   * Writes the buffer.\n   *\n   * @api public\n   * @method write\n   * @receiver MongooseBuffer\n   */\n\n  write: function() {\n    const written = Buffer.prototype.write.apply(this, arguments);\n\n    if (written > 0) {\n      this._markModified();\n    }\n\n    return written;\n  },\n\n  /**\n   * Copies the buffer.\n   *\n   * ####Note:\n   *\n   * `Buffer#copy` does not mark `target` as modified so you must copy from a `MongooseBuffer` for it to work as expected. This is a work around since `copy` modifies the target, not this.\n   *\n   * @return {Number} The number of bytes copied.\n   * @param {Buffer} target\n   * @method copy\n   * @receiver MongooseBuffer\n   */\n\n  copy: function(target) {\n    const ret = Buffer.prototype.copy.apply(this, arguments);\n\n    if (target && target.isMongooseBuffer) {\n      target._markModified();\n    }\n\n    return ret;\n  }\n};\n\n/*!\n * Compile other Buffer methods marking this buffer as modified.\n */\n\n(\n// node < 0.5\n  ('writeUInt8 writeUInt16 writeUInt32 writeInt8 writeInt16 writeInt32 ' +\n    'writeFloat writeDouble fill ' +\n    'utf8Write binaryWrite asciiWrite set ' +\n\n  // node >= 0.5\n    'writeUInt16LE writeUInt16BE writeUInt32LE writeUInt32BE ' +\n    'writeInt16LE writeInt16BE writeInt32LE writeInt32BE ' + 'writeFloatLE writeFloatBE writeDoubleLE writeDoubleBE')\n).split(' ').forEach(function(method) {\n  if (!Buffer.prototype[method]) {\n    return;\n  }\n  MongooseBuffer.mixin[method] = function() {\n    const ret = Buffer.prototype[method].apply(this, arguments);\n    this._markModified();\n    return ret;\n  };\n});\n\n/**\n * Converts this buffer to its Binary type representation.\n *\n * ####SubTypes:\n *\n *   const bson = require('bson')\n *   bson.BSON_BINARY_SUBTYPE_DEFAULT\n *   bson.BSON_BINARY_SUBTYPE_FUNCTION\n *   bson.BSON_BINARY_SUBTYPE_BYTE_ARRAY\n *   bson.BSON_BINARY_SUBTYPE_UUID\n *   bson.BSON_BINARY_SUBTYPE_MD5\n *   bson.BSON_BINARY_SUBTYPE_USER_DEFINED\n *\n *   doc.buffer.toObject(bson.BSON_BINARY_SUBTYPE_USER_DEFINED);\n *\n * @see http://bsonspec.org/#/specification\n * @param {Hex} [subtype]\n * @return {Binary}\n * @api public\n * @method toObject\n * @receiver MongooseBuffer\n */\n\nMongooseBuffer.mixin.toObject = function(options) {\n  const subtype = typeof options === 'number'\n    ? options\n    : (this._subtype || 0);\n  return new Binary(Buffer.from(this), subtype);\n};\n\n/**\n * Converts this buffer for storage in MongoDB, including subtype\n *\n * @return {Binary}\n * @api public\n * @method toBSON\n * @receiver MongooseBuffer\n */\n\nMongooseBuffer.mixin.toBSON = function() {\n  return new Binary(this, this._subtype || 0);\n};\n\n/**\n * Determines if this buffer is equals to `other` buffer\n *\n * @param {Buffer} other\n * @return {Boolean}\n * @method equals\n * @receiver MongooseBuffer\n */\n\nMongooseBuffer.mixin.equals = function(other) {\n  if (!Buffer.isBuffer(other)) {\n    return false;\n  }\n\n  if (this.length !== other.length) {\n    return false;\n  }\n\n  for (let i = 0; i < this.length; ++i) {\n    if (this[i] !== other[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * Sets the subtype option and marks the buffer modified.\n *\n * ####SubTypes:\n *\n *   const bson = require('bson')\n *   bson.BSON_BINARY_SUBTYPE_DEFAULT\n *   bson.BSON_BINARY_SUBTYPE_FUNCTION\n *   bson.BSON_BINARY_SUBTYPE_BYTE_ARRAY\n *   bson.BSON_BINARY_SUBTYPE_UUID\n *   bson.BSON_BINARY_SUBTYPE_MD5\n *   bson.BSON_BINARY_SUBTYPE_USER_DEFINED\n *\n *   doc.buffer.subtype(bson.BSON_BINARY_SUBTYPE_UUID);\n *\n * @see http://bsonspec.org/#/specification\n * @param {Hex} subtype\n * @api public\n * @method subtype\n * @receiver MongooseBuffer\n */\n\nMongooseBuffer.mixin.subtype = function(subtype) {\n  if (typeof subtype !== 'number') {\n    throw new TypeError('Invalid subtype. Expected a number');\n  }\n\n  if (this._subtype !== subtype) {\n    this._markModified();\n  }\n\n  this._subtype = subtype;\n};\n\n/*!\n * Module exports.\n */\n\nMongooseBuffer.Binary = Binary;\n\nmodule.exports = MongooseBuffer;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}