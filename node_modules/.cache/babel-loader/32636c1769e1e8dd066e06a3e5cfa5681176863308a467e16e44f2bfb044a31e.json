{"ast":null,"code":"'use strict';\n\n/*!\n * Module dependencies.\n */\nconst ms = require('ms');\nconst mpath = require('mpath');\nconst sliced = require('sliced');\nconst Buffer = require('safe-buffer').Buffer;\nconst Decimal = require('./types/decimal128');\nconst ObjectId = require('./types/objectid');\nconst PopulateOptions = require('./options/PopulateOptions');\nconst clone = require('./helpers/clone');\nconst immediate = require('./helpers/immediate');\nconst isObject = require('./helpers/isObject');\nconst isBsonType = require('./helpers/isBsonType');\nconst getFunctionName = require('./helpers/getFunctionName');\nconst isMongooseObject = require('./helpers/isMongooseObject');\nconst promiseOrCallback = require('./helpers/promiseOrCallback');\nconst schemaMerge = require('./helpers/schema/merge');\nconst specialProperties = require('./helpers/specialProperties');\nlet Document;\nexports.specialProperties = specialProperties;\n\n/*!\n * Produces a collection name from model `name`. By default, just returns\n * the model name\n *\n * @param {String} name a model name\n * @param {Function} pluralize function that pluralizes the collection name\n * @return {String} a collection name\n * @api private\n */\n\nexports.toCollectionName = function (name, pluralize) {\n  if (name === 'system.profile') {\n    return name;\n  }\n  if (name === 'system.indexes') {\n    return name;\n  }\n  if (typeof pluralize === 'function') {\n    return pluralize(name);\n  }\n  return name;\n};\n\n/*!\n * Determines if `a` and `b` are deep equal.\n *\n * Modified from node/lib/assert.js\n *\n * @param {any} a a value to compare to `b`\n * @param {any} b a value to compare to `a`\n * @return {Boolean}\n * @api private\n */\n\nexports.deepEqual = function deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== 'object' && typeof b !== 'object') {\n    return a === b;\n  }\n  if (a instanceof Date && b instanceof Date) {\n    return a.getTime() === b.getTime();\n  }\n  if (isBsonType(a, 'ObjectID') && isBsonType(b, 'ObjectID') || isBsonType(a, 'Decimal128') && isBsonType(b, 'Decimal128')) {\n    return a.toString() === b.toString();\n  }\n  if (a instanceof RegExp && b instanceof RegExp) {\n    return a.source === b.source && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.global === b.global;\n  }\n  if (a == null || b == null) {\n    return false;\n  }\n  if (a.prototype !== b.prototype) {\n    return false;\n  }\n  if (a instanceof Map && b instanceof Map) {\n    return deepEqual(Array.from(a.keys()), Array.from(b.keys())) && deepEqual(Array.from(a.values()), Array.from(b.values()));\n  }\n\n  // Handle MongooseNumbers\n  if (a instanceof Number && b instanceof Number) {\n    return a.valueOf() === b.valueOf();\n  }\n  if (Buffer.isBuffer(a)) {\n    return exports.buffer.areEqual(a, b);\n  }\n  if (Array.isArray(a) && Array.isArray(b)) {\n    const len = a.length;\n    if (len !== b.length) {\n      return false;\n    }\n    for (let i = 0; i < len; ++i) {\n      if (!deepEqual(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  if (a.$__ != null) {\n    a = a._doc;\n  } else if (isMongooseObject(a)) {\n    a = a.toObject();\n  }\n  if (b.$__ != null) {\n    b = b._doc;\n  } else if (isMongooseObject(b)) {\n    b = b.toObject();\n  }\n  const ka = Object.keys(a);\n  const kb = Object.keys(b);\n  const kaLength = ka.length;\n\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (kaLength !== kb.length) {\n    return false;\n  }\n\n  // the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n\n  // ~~~cheap key test\n  for (let i = kaLength - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i]) {\n      return false;\n    }\n  }\n\n  // equivalent values for every corresponding key, and\n  // ~~~possibly expensive deep test\n  for (const key of ka) {\n    if (!deepEqual(a[key], b[key])) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/*!\n * Get the last element of an array\n */\n\nexports.last = function (arr) {\n  if (arr.length > 0) {\n    return arr[arr.length - 1];\n  }\n  return void 0;\n};\nexports.clone = clone;\n\n/*!\n * ignore\n */\n\nexports.promiseOrCallback = promiseOrCallback;\n\n/*!\n * ignore\n */\n\nexports.omit = function omit(obj, keys) {\n  if (keys == null) {\n    return Object.assign({}, obj);\n  }\n  if (!Array.isArray(keys)) {\n    keys = [keys];\n  }\n  const ret = Object.assign({}, obj);\n  for (const key of keys) {\n    delete ret[key];\n  }\n  return ret;\n};\n\n/*!\n * Shallow copies defaults into options.\n *\n * @param {Object} defaults\n * @param {Object} options\n * @return {Object} the merged object\n * @api private\n */\n\nexports.options = function (defaults, options) {\n  const keys = Object.keys(defaults);\n  let i = keys.length;\n  let k;\n  options = options || {};\n  while (i--) {\n    k = keys[i];\n    if (!(k in options)) {\n      options[k] = defaults[k];\n    }\n  }\n  return options;\n};\n\n/*!\n * Generates a random string\n *\n * @api private\n */\n\nexports.random = function () {\n  return Math.random().toString().substr(3);\n};\n\n/*!\n * Merges `from` into `to` without overwriting existing properties.\n *\n * @param {Object} to\n * @param {Object} from\n * @api private\n */\n\nexports.merge = function merge(to, from, options, path) {\n  options = options || {};\n  const keys = Object.keys(from);\n  let i = 0;\n  const len = keys.length;\n  let key;\n  path = path || '';\n  const omitNested = options.omitNested || {};\n  while (i < len) {\n    key = keys[i++];\n    if (options.omit && options.omit[key]) {\n      continue;\n    }\n    if (omitNested[path]) {\n      continue;\n    }\n    if (specialProperties.has(key)) {\n      continue;\n    }\n    if (to[key] == null) {\n      to[key] = from[key];\n    } else if (exports.isObject(from[key])) {\n      if (!exports.isObject(to[key])) {\n        to[key] = {};\n      }\n      if (from[key] != null) {\n        // Skip merging schemas if we're creating a discriminator schema and\n        // base schema has a given path as a single nested but discriminator schema\n        // has the path as a document array, or vice versa (gh-9534)\n        if (options.isDiscriminatorSchemaMerge && from[key].$isSingleNested && to[key].$isMongooseDocumentArray || from[key].$isMongooseDocumentArray && to[key].$isSingleNested) {\n          continue;\n        } else if (from[key].instanceOfSchema) {\n          if (to[key].instanceOfSchema) {\n            schemaMerge(to[key], from[key].clone(), options.isDiscriminatorSchemaMerge);\n          } else {\n            to[key] = from[key].clone();\n          }\n          continue;\n        } else if (from[key] instanceof ObjectId) {\n          to[key] = new ObjectId(from[key]);\n          continue;\n        }\n      }\n      merge(to[key], from[key], options, path ? path + '.' + key : key);\n    } else if (options.overwrite) {\n      to[key] = from[key];\n    }\n  }\n};\n\n/*!\n * Applies toObject recursively.\n *\n * @param {Document|Array|Object} obj\n * @return {Object}\n * @api private\n */\n\nexports.toObject = function toObject(obj) {\n  Document || (Document = require('./document'));\n  let ret;\n  if (obj == null) {\n    return obj;\n  }\n  if (obj instanceof Document) {\n    return obj.toObject();\n  }\n  if (Array.isArray(obj)) {\n    ret = [];\n    for (const doc of obj) {\n      ret.push(toObject(doc));\n    }\n    return ret;\n  }\n  if (exports.isPOJO(obj)) {\n    ret = {};\n    for (const k of Object.keys(obj)) {\n      if (specialProperties.has(k)) {\n        continue;\n      }\n      ret[k] = toObject(obj[k]);\n    }\n    return ret;\n  }\n  return obj;\n};\nexports.isObject = isObject;\n\n/*!\n * Determines if `arg` is a plain old JavaScript object (POJO). Specifically,\n * `arg` must be an object but not an instance of any special class, like String,\n * ObjectId, etc.\n *\n * `Object.getPrototypeOf()` is part of ES5: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf\n *\n * @param {Object|Array|String|Function|RegExp|any} arg\n * @api private\n * @return {Boolean}\n */\n\nexports.isPOJO = function isPOJO(arg) {\n  if (arg == null || typeof arg !== 'object') {\n    return false;\n  }\n  const proto = Object.getPrototypeOf(arg);\n  // Prototype may be null if you used `Object.create(null)`\n  // Checking `proto`'s constructor is safe because `getPrototypeOf()`\n  // explicitly crosses the boundary from object data to object metadata\n  return !proto || proto.constructor.name === 'Object';\n};\n\n/*!\n * Determines if `obj` is a built-in object like an array, date, boolean,\n * etc.\n */\n\nexports.isNativeObject = function (arg) {\n  return Array.isArray(arg) || arg instanceof Date || arg instanceof Boolean || arg instanceof Number || arg instanceof String;\n};\n\n/*!\n * Determines if `val` is an object that has no own keys\n */\n\nexports.isEmptyObject = function (val) {\n  return val != null && typeof val === 'object' && Object.keys(val).length === 0;\n};\n\n/*!\n * Search if `obj` or any POJOs nested underneath `obj` has a property named\n * `key`\n */\n\nexports.hasKey = function hasKey(obj, key) {\n  const props = Object.keys(obj);\n  for (const prop of props) {\n    if (prop === key) {\n      return true;\n    }\n    if (exports.isPOJO(obj[prop]) && exports.hasKey(obj[prop], key)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/*!\n * A faster Array.prototype.slice.call(arguments) alternative\n * @api private\n */\n\nexports.args = sliced;\n\n/*!\n * process.nextTick helper.\n *\n * Wraps `callback` in a try/catch + nextTick.\n *\n * node-mongodb-native has a habit of state corruption when an error is immediately thrown from within a collection callback.\n *\n * @param {Function} callback\n * @api private\n */\n\nexports.tick = function tick(callback) {\n  if (typeof callback !== 'function') {\n    return;\n  }\n  return function () {\n    try {\n      callback.apply(this, arguments);\n    } catch (err) {\n      // only nextTick on err to get out of\n      // the event loop and avoid state corruption.\n      immediate(function () {\n        throw err;\n      });\n    }\n  };\n};\n\n/*!\n * Returns true if `v` is an object that can be serialized as a primitive in\n * MongoDB\n */\n\nexports.isMongooseType = function (v) {\n  return v instanceof ObjectId || v instanceof Decimal || v instanceof Buffer;\n};\nexports.isMongooseObject = isMongooseObject;\n\n/*!\n * Converts `expires` options of index objects to `expiresAfterSeconds` options for MongoDB.\n *\n * @param {Object} object\n * @api private\n */\n\nexports.expires = function expires(object) {\n  if (!(object && object.constructor.name === 'Object')) {\n    return;\n  }\n  if (!('expires' in object)) {\n    return;\n  }\n  let when;\n  if (typeof object.expires !== 'string') {\n    when = object.expires;\n  } else {\n    when = Math.round(ms(object.expires) / 1000);\n  }\n  object.expireAfterSeconds = when;\n  delete object.expires;\n};\n\n/*!\n * populate helper\n */\n\nexports.populate = function populate(path, select, model, match, options, subPopulate, justOne, count) {\n  // might have passed an object specifying all arguments\n  let obj = null;\n  if (arguments.length === 1) {\n    if (path instanceof PopulateOptions) {\n      return [path];\n    }\n    if (Array.isArray(path)) {\n      const singles = makeSingles(path);\n      return singles.map(o => exports.populate(o)[0]);\n    }\n    if (exports.isObject(path)) {\n      obj = Object.assign({}, path);\n    } else {\n      obj = {\n        path: path\n      };\n    }\n  } else if (typeof model === 'object') {\n    obj = {\n      path: path,\n      select: select,\n      match: model,\n      options: match\n    };\n  } else {\n    obj = {\n      path: path,\n      select: select,\n      model: model,\n      match: match,\n      options: options,\n      populate: subPopulate,\n      justOne: justOne,\n      count: count\n    };\n  }\n  if (typeof obj.path !== 'string') {\n    throw new TypeError('utils.populate: invalid path. Expected string. Got typeof `' + typeof path + '`');\n  }\n  return _populateObj(obj);\n\n  // The order of select/conditions args is opposite Model.find but\n  // necessary to keep backward compatibility (select could be\n  // an array, string, or object literal).\n  function makeSingles(arr) {\n    const ret = [];\n    arr.forEach(function (obj) {\n      if (/[\\s]/.test(obj.path)) {\n        const paths = obj.path.split(' ');\n        paths.forEach(function (p) {\n          const copy = Object.assign({}, obj);\n          copy.path = p;\n          ret.push(copy);\n        });\n      } else {\n        ret.push(obj);\n      }\n    });\n    return ret;\n  }\n};\nfunction _populateObj(obj) {\n  if (Array.isArray(obj.populate)) {\n    const ret = [];\n    obj.populate.forEach(function (obj) {\n      if (/[\\s]/.test(obj.path)) {\n        const copy = Object.assign({}, obj);\n        const paths = copy.path.split(' ');\n        paths.forEach(function (p) {\n          copy.path = p;\n          ret.push(exports.populate(copy)[0]);\n        });\n      } else {\n        ret.push(exports.populate(obj)[0]);\n      }\n    });\n    obj.populate = exports.populate(ret);\n  } else if (obj.populate != null && typeof obj.populate === 'object') {\n    obj.populate = exports.populate(obj.populate);\n  }\n  const ret = [];\n  const paths = obj.path.split(' ');\n  if (obj.options != null) {\n    obj.options = exports.clone(obj.options);\n  }\n  for (const path of paths) {\n    ret.push(new PopulateOptions(Object.assign({}, obj, {\n      path: path\n    })));\n  }\n  return ret;\n}\n\n/*!\n * Return the value of `obj` at the given `path`.\n *\n * @param {String} path\n * @param {Object} obj\n */\n\nexports.getValue = function (path, obj, map) {\n  return mpath.get(path, obj, '_doc', map);\n};\n\n/*!\n * Sets the value of `obj` at the given `path`.\n *\n * @param {String} path\n * @param {Anything} val\n * @param {Object} obj\n */\n\nexports.setValue = function (path, val, obj, map, _copying) {\n  mpath.set(path, val, obj, '_doc', map, _copying);\n};\n\n/*!\n * Returns an array of values from object `o`.\n *\n * @param {Object} o\n * @return {Array}\n * @private\n */\n\nexports.object = {};\nexports.object.vals = function vals(o) {\n  const keys = Object.keys(o);\n  let i = keys.length;\n  const ret = [];\n  while (i--) {\n    ret.push(o[keys[i]]);\n  }\n  return ret;\n};\n\n/*!\n * @see exports.options\n */\n\nexports.object.shallowCopy = exports.options;\n\n/*!\n * Safer helper for hasOwnProperty checks\n *\n * @param {Object} obj\n * @param {String} prop\n */\n\nconst hop = Object.prototype.hasOwnProperty;\nexports.object.hasOwnProperty = function (obj, prop) {\n  return hop.call(obj, prop);\n};\n\n/*!\n * Determine if `val` is null or undefined\n *\n * @return {Boolean}\n */\n\nexports.isNullOrUndefined = function (val) {\n  return val === null || val === undefined;\n};\n\n/*!\n * ignore\n */\n\nexports.array = {};\n\n/*!\n * Flattens an array.\n *\n * [ 1, [ 2, 3, [4] ]] -> [1,2,3,4]\n *\n * @param {Array} arr\n * @param {Function} [filter] If passed, will be invoked with each item in the array. If `filter` returns a falsy value, the item will not be included in the results.\n * @return {Array}\n * @private\n */\n\nexports.array.flatten = function flatten(arr, filter, ret) {\n  ret || (ret = []);\n  arr.forEach(function (item) {\n    if (Array.isArray(item)) {\n      flatten(item, filter, ret);\n    } else {\n      if (!filter || filter(item)) {\n        ret.push(item);\n      }\n    }\n  });\n  return ret;\n};\n\n/*!\n * ignore\n */\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\nexports.hasUserDefinedProperty = function (obj, key) {\n  if (obj == null) {\n    return false;\n  }\n  if (Array.isArray(key)) {\n    for (const k of key) {\n      if (exports.hasUserDefinedProperty(obj, k)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  if (_hasOwnProperty.call(obj, key)) {\n    return true;\n  }\n  if (typeof obj === 'object' && key in obj) {\n    const v = obj[key];\n    return v !== Object.prototype[key] && v !== Array.prototype[key];\n  }\n  return false;\n};\n\n/*!\n * ignore\n */\n\nconst MAX_ARRAY_INDEX = Math.pow(2, 32) - 1;\nexports.isArrayIndex = function (val) {\n  if (typeof val === 'number') {\n    return val >= 0 && val <= MAX_ARRAY_INDEX;\n  }\n  if (typeof val === 'string') {\n    if (!/^\\d+$/.test(val)) {\n      return false;\n    }\n    val = +val;\n    return val >= 0 && val <= MAX_ARRAY_INDEX;\n  }\n  return false;\n};\n\n/*!\n * Removes duplicate values from an array\n *\n * [1, 2, 3, 3, 5] => [1, 2, 3, 5]\n * [ ObjectId(\"550988ba0c19d57f697dc45e\"), ObjectId(\"550988ba0c19d57f697dc45e\") ]\n *    => [ObjectId(\"550988ba0c19d57f697dc45e\")]\n *\n * @param {Array} arr\n * @return {Array}\n * @private\n */\n\nexports.array.unique = function (arr) {\n  const primitives = new Set();\n  const ids = new Set();\n  const ret = [];\n  for (const item of arr) {\n    if (typeof item === 'number' || typeof item === 'string' || item == null) {\n      if (primitives.has(item)) {\n        continue;\n      }\n      ret.push(item);\n      primitives.add(item);\n    } else if (item instanceof ObjectId) {\n      if (ids.has(item.toString())) {\n        continue;\n      }\n      ret.push(item);\n      ids.add(item.toString());\n    } else {\n      ret.push(item);\n    }\n  }\n  return ret;\n};\n\n/*!\n * Determines if two buffers are equal.\n *\n * @param {Buffer} a\n * @param {Object} b\n */\n\nexports.buffer = {};\nexports.buffer.areEqual = function (a, b) {\n  if (!Buffer.isBuffer(a)) {\n    return false;\n  }\n  if (!Buffer.isBuffer(b)) {\n    return false;\n  }\n  if (a.length !== b.length) {\n    return false;\n  }\n  for (let i = 0, len = a.length; i < len; ++i) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n};\nexports.getFunctionName = getFunctionName;\n/*!\n * Decorate buffers\n */\n\nexports.decorate = function (destination, source) {\n  for (const key in source) {\n    if (specialProperties.has(key)) {\n      continue;\n    }\n    destination[key] = source[key];\n  }\n};\n\n/**\n * merges to with a copy of from\n *\n * @param {Object} to\n * @param {Object} fromObj\n * @api private\n */\n\nexports.mergeClone = function (to, fromObj) {\n  if (isMongooseObject(fromObj)) {\n    fromObj = fromObj.toObject({\n      transform: false,\n      virtuals: false,\n      depopulate: true,\n      getters: false,\n      flattenDecimals: false\n    });\n  }\n  const keys = Object.keys(fromObj);\n  const len = keys.length;\n  let i = 0;\n  let key;\n  while (i < len) {\n    key = keys[i++];\n    if (specialProperties.has(key)) {\n      continue;\n    }\n    if (typeof to[key] === 'undefined') {\n      to[key] = exports.clone(fromObj[key], {\n        transform: false,\n        virtuals: false,\n        depopulate: true,\n        getters: false,\n        flattenDecimals: false\n      });\n    } else {\n      let val = fromObj[key];\n      if (val != null && val.valueOf && !(val instanceof Date)) {\n        val = val.valueOf();\n      }\n      if (exports.isObject(val)) {\n        let obj = val;\n        if (isMongooseObject(val) && !val.isMongooseBuffer) {\n          obj = obj.toObject({\n            transform: false,\n            virtuals: false,\n            depopulate: true,\n            getters: false,\n            flattenDecimals: false\n          });\n        }\n        if (val.isMongooseBuffer) {\n          obj = Buffer.from(obj);\n        }\n        exports.mergeClone(to[key], obj);\n      } else {\n        to[key] = exports.clone(val, {\n          flattenDecimals: false\n        });\n      }\n    }\n  }\n};\n\n/**\n * Executes a function on each element of an array (like _.each)\n *\n * @param {Array} arr\n * @param {Function} fn\n * @api private\n */\n\nexports.each = function (arr, fn) {\n  for (const item of arr) {\n    fn(item);\n  }\n};\n\n/*!\n * ignore\n */\n\nexports.getOption = function (name) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  for (const source of sources) {\n    if (source[name] != null) {\n      return source[name];\n    }\n  }\n  return null;\n};\n\n/*!\n * ignore\n */\n\nexports.noop = function () {};\nexports.errorToPOJO = function errorToPOJO(error) {\n  const isError = error instanceof Error;\n  if (!isError) {\n    throw new Error('`error` must be `instanceof Error`.');\n  }\n  const ret = {};\n  for (const properyName of Object.getOwnPropertyNames(error)) {\n    ret[properyName] = error[properyName];\n  }\n  return ret;\n};\nexports.nodeMajorVersion = parseInt(process.versions.node.split('.')[0], 10);","map":{"version":3,"names":["ms","require","mpath","sliced","Buffer","Decimal","ObjectId","PopulateOptions","clone","immediate","isObject","isBsonType","getFunctionName","isMongooseObject","promiseOrCallback","schemaMerge","specialProperties","Document","exports","toCollectionName","name","pluralize","deepEqual","a","b","Date","getTime","toString","RegExp","source","ignoreCase","multiline","global","prototype","Map","Array","from","keys","values","Number","valueOf","isBuffer","buffer","areEqual","isArray","len","length","i","$__","_doc","toObject","ka","Object","kb","kaLength","sort","key","last","arr","omit","obj","assign","ret","options","defaults","k","random","Math","substr","merge","to","path","omitNested","has","isDiscriminatorSchemaMerge","$isSingleNested","$isMongooseDocumentArray","instanceOfSchema","overwrite","doc","push","isPOJO","arg","proto","getPrototypeOf","constructor","isNativeObject","Boolean","String","isEmptyObject","val","hasKey","props","prop","args","tick","callback","apply","arguments","err","isMongooseType","v","expires","object","when","round","expireAfterSeconds","populate","select","model","match","subPopulate","justOne","count","singles","makeSingles","map","o","TypeError","_populateObj","forEach","test","paths","split","p","copy","getValue","get","setValue","_copying","set","vals","shallowCopy","hop","hasOwnProperty","call","isNullOrUndefined","undefined","array","flatten","filter","item","_hasOwnProperty","hasUserDefinedProperty","MAX_ARRAY_INDEX","pow","isArrayIndex","unique","primitives","Set","ids","add","decorate","destination","mergeClone","fromObj","transform","virtuals","depopulate","getters","flattenDecimals","isMongooseBuffer","each","fn","getOption","sources","slice","noop","errorToPOJO","error","isError","Error","properyName","getOwnPropertyNames","nodeMajorVersion","parseInt","process","versions","node"],"sources":["/home/ctl/Documents/nodejs/node_modules/mongoose/lib/utils.js"],"sourcesContent":["'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst ms = require('ms');\nconst mpath = require('mpath');\nconst sliced = require('sliced');\nconst Buffer = require('safe-buffer').Buffer;\nconst Decimal = require('./types/decimal128');\nconst ObjectId = require('./types/objectid');\nconst PopulateOptions = require('./options/PopulateOptions');\nconst clone = require('./helpers/clone');\nconst immediate = require('./helpers/immediate');\nconst isObject = require('./helpers/isObject');\nconst isBsonType = require('./helpers/isBsonType');\nconst getFunctionName = require('./helpers/getFunctionName');\nconst isMongooseObject = require('./helpers/isMongooseObject');\nconst promiseOrCallback = require('./helpers/promiseOrCallback');\nconst schemaMerge = require('./helpers/schema/merge');\nconst specialProperties = require('./helpers/specialProperties');\n\nlet Document;\n\nexports.specialProperties = specialProperties;\n\n/*!\n * Produces a collection name from model `name`. By default, just returns\n * the model name\n *\n * @param {String} name a model name\n * @param {Function} pluralize function that pluralizes the collection name\n * @return {String} a collection name\n * @api private\n */\n\nexports.toCollectionName = function(name, pluralize) {\n  if (name === 'system.profile') {\n    return name;\n  }\n  if (name === 'system.indexes') {\n    return name;\n  }\n  if (typeof pluralize === 'function') {\n    return pluralize(name);\n  }\n  return name;\n};\n\n/*!\n * Determines if `a` and `b` are deep equal.\n *\n * Modified from node/lib/assert.js\n *\n * @param {any} a a value to compare to `b`\n * @param {any} b a value to compare to `a`\n * @return {Boolean}\n * @api private\n */\n\nexports.deepEqual = function deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== 'object' && typeof b !== 'object') {\n    return a === b;\n  }\n\n  if (a instanceof Date && b instanceof Date) {\n    return a.getTime() === b.getTime();\n  }\n\n  if ((isBsonType(a, 'ObjectID') && isBsonType(b, 'ObjectID')) ||\n      (isBsonType(a, 'Decimal128') && isBsonType(b, 'Decimal128'))) {\n    return a.toString() === b.toString();\n  }\n\n  if (a instanceof RegExp && b instanceof RegExp) {\n    return a.source === b.source &&\n        a.ignoreCase === b.ignoreCase &&\n        a.multiline === b.multiline &&\n        a.global === b.global;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (a.prototype !== b.prototype) {\n    return false;\n  }\n\n  if (a instanceof Map && b instanceof Map) {\n    return deepEqual(Array.from(a.keys()), Array.from(b.keys())) &&\n      deepEqual(Array.from(a.values()), Array.from(b.values()));\n  }\n\n  // Handle MongooseNumbers\n  if (a instanceof Number && b instanceof Number) {\n    return a.valueOf() === b.valueOf();\n  }\n\n  if (Buffer.isBuffer(a)) {\n    return exports.buffer.areEqual(a, b);\n  }\n\n  if (Array.isArray(a) && Array.isArray(b)) {\n    const len = a.length;\n    if (len !== b.length) {\n      return false;\n    }\n    for (let i = 0; i < len; ++i) {\n      if (!deepEqual(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  if (a.$__ != null) {\n    a = a._doc;\n  } else if (isMongooseObject(a)) {\n    a = a.toObject();\n  }\n\n  if (b.$__ != null) {\n    b = b._doc;\n  } else if (isMongooseObject(b)) {\n    b = b.toObject();\n  }\n\n  const ka = Object.keys(a);\n  const kb = Object.keys(b);\n  const kaLength = ka.length;\n\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (kaLength !== kb.length) {\n    return false;\n  }\n\n  // the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n\n  // ~~~cheap key test\n  for (let i = kaLength - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i]) {\n      return false;\n    }\n  }\n\n  // equivalent values for every corresponding key, and\n  // ~~~possibly expensive deep test\n  for (const key of ka) {\n    if (!deepEqual(a[key], b[key])) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/*!\n * Get the last element of an array\n */\n\nexports.last = function(arr) {\n  if (arr.length > 0) {\n    return arr[arr.length - 1];\n  }\n  return void 0;\n};\n\nexports.clone = clone;\n\n/*!\n * ignore\n */\n\nexports.promiseOrCallback = promiseOrCallback;\n\n/*!\n * ignore\n */\n\nexports.omit = function omit(obj, keys) {\n  if (keys == null) {\n    return Object.assign({}, obj);\n  }\n  if (!Array.isArray(keys)) {\n    keys = [keys];\n  }\n\n  const ret = Object.assign({}, obj);\n  for (const key of keys) {\n    delete ret[key];\n  }\n  return ret;\n};\n\n\n/*!\n * Shallow copies defaults into options.\n *\n * @param {Object} defaults\n * @param {Object} options\n * @return {Object} the merged object\n * @api private\n */\n\nexports.options = function(defaults, options) {\n  const keys = Object.keys(defaults);\n  let i = keys.length;\n  let k;\n\n  options = options || {};\n\n  while (i--) {\n    k = keys[i];\n    if (!(k in options)) {\n      options[k] = defaults[k];\n    }\n  }\n\n  return options;\n};\n\n/*!\n * Generates a random string\n *\n * @api private\n */\n\nexports.random = function() {\n  return Math.random().toString().substr(3);\n};\n\n/*!\n * Merges `from` into `to` without overwriting existing properties.\n *\n * @param {Object} to\n * @param {Object} from\n * @api private\n */\n\nexports.merge = function merge(to, from, options, path) {\n  options = options || {};\n\n  const keys = Object.keys(from);\n  let i = 0;\n  const len = keys.length;\n  let key;\n\n  path = path || '';\n  const omitNested = options.omitNested || {};\n\n  while (i < len) {\n    key = keys[i++];\n    if (options.omit && options.omit[key]) {\n      continue;\n    }\n    if (omitNested[path]) {\n      continue;\n    }\n    if (specialProperties.has(key)) {\n      continue;\n    }\n    if (to[key] == null) {\n      to[key] = from[key];\n    } else if (exports.isObject(from[key])) {\n      if (!exports.isObject(to[key])) {\n        to[key] = {};\n      }\n      if (from[key] != null) {\n        // Skip merging schemas if we're creating a discriminator schema and\n        // base schema has a given path as a single nested but discriminator schema\n        // has the path as a document array, or vice versa (gh-9534)\n        if (options.isDiscriminatorSchemaMerge &&\n            (from[key].$isSingleNested && to[key].$isMongooseDocumentArray) ||\n            (from[key].$isMongooseDocumentArray && to[key].$isSingleNested)) {\n          continue;\n        } else if (from[key].instanceOfSchema) {\n          if (to[key].instanceOfSchema) {\n            schemaMerge(to[key], from[key].clone(), options.isDiscriminatorSchemaMerge);\n          } else {\n            to[key] = from[key].clone();\n          }\n          continue;\n        } else if (from[key] instanceof ObjectId) {\n          to[key] = new ObjectId(from[key]);\n          continue;\n        }\n      }\n      merge(to[key], from[key], options, path ? path + '.' + key : key);\n    } else if (options.overwrite) {\n      to[key] = from[key];\n    }\n  }\n};\n\n/*!\n * Applies toObject recursively.\n *\n * @param {Document|Array|Object} obj\n * @return {Object}\n * @api private\n */\n\nexports.toObject = function toObject(obj) {\n  Document || (Document = require('./document'));\n  let ret;\n\n  if (obj == null) {\n    return obj;\n  }\n\n  if (obj instanceof Document) {\n    return obj.toObject();\n  }\n\n  if (Array.isArray(obj)) {\n    ret = [];\n\n    for (const doc of obj) {\n      ret.push(toObject(doc));\n    }\n\n    return ret;\n  }\n\n  if (exports.isPOJO(obj)) {\n    ret = {};\n\n    for (const k of Object.keys(obj)) {\n      if (specialProperties.has(k)) {\n        continue;\n      }\n      ret[k] = toObject(obj[k]);\n    }\n\n    return ret;\n  }\n\n  return obj;\n};\n\nexports.isObject = isObject;\n\n/*!\n * Determines if `arg` is a plain old JavaScript object (POJO). Specifically,\n * `arg` must be an object but not an instance of any special class, like String,\n * ObjectId, etc.\n *\n * `Object.getPrototypeOf()` is part of ES5: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf\n *\n * @param {Object|Array|String|Function|RegExp|any} arg\n * @api private\n * @return {Boolean}\n */\n\nexports.isPOJO = function isPOJO(arg) {\n  if (arg == null || typeof arg !== 'object') {\n    return false;\n  }\n  const proto = Object.getPrototypeOf(arg);\n  // Prototype may be null if you used `Object.create(null)`\n  // Checking `proto`'s constructor is safe because `getPrototypeOf()`\n  // explicitly crosses the boundary from object data to object metadata\n  return !proto || proto.constructor.name === 'Object';\n};\n\n/*!\n * Determines if `obj` is a built-in object like an array, date, boolean,\n * etc.\n */\n\nexports.isNativeObject = function(arg) {\n  return Array.isArray(arg) ||\n    arg instanceof Date ||\n    arg instanceof Boolean ||\n    arg instanceof Number ||\n    arg instanceof String;\n};\n\n/*!\n * Determines if `val` is an object that has no own keys\n */\n\nexports.isEmptyObject = function(val) {\n  return val != null &&\n    typeof val === 'object' &&\n    Object.keys(val).length === 0;\n};\n\n/*!\n * Search if `obj` or any POJOs nested underneath `obj` has a property named\n * `key`\n */\n\nexports.hasKey = function hasKey(obj, key) {\n  const props = Object.keys(obj);\n  for (const prop of props) {\n    if (prop === key) {\n      return true;\n    }\n    if (exports.isPOJO(obj[prop]) && exports.hasKey(obj[prop], key)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/*!\n * A faster Array.prototype.slice.call(arguments) alternative\n * @api private\n */\n\nexports.args = sliced;\n\n/*!\n * process.nextTick helper.\n *\n * Wraps `callback` in a try/catch + nextTick.\n *\n * node-mongodb-native has a habit of state corruption when an error is immediately thrown from within a collection callback.\n *\n * @param {Function} callback\n * @api private\n */\n\nexports.tick = function tick(callback) {\n  if (typeof callback !== 'function') {\n    return;\n  }\n  return function() {\n    try {\n      callback.apply(this, arguments);\n    } catch (err) {\n      // only nextTick on err to get out of\n      // the event loop and avoid state corruption.\n      immediate(function() {\n        throw err;\n      });\n    }\n  };\n};\n\n/*!\n * Returns true if `v` is an object that can be serialized as a primitive in\n * MongoDB\n */\n\nexports.isMongooseType = function(v) {\n  return v instanceof ObjectId || v instanceof Decimal || v instanceof Buffer;\n};\n\nexports.isMongooseObject = isMongooseObject;\n\n/*!\n * Converts `expires` options of index objects to `expiresAfterSeconds` options for MongoDB.\n *\n * @param {Object} object\n * @api private\n */\n\nexports.expires = function expires(object) {\n  if (!(object && object.constructor.name === 'Object')) {\n    return;\n  }\n  if (!('expires' in object)) {\n    return;\n  }\n\n  let when;\n  if (typeof object.expires !== 'string') {\n    when = object.expires;\n  } else {\n    when = Math.round(ms(object.expires) / 1000);\n  }\n  object.expireAfterSeconds = when;\n  delete object.expires;\n};\n\n/*!\n * populate helper\n */\n\nexports.populate = function populate(path, select, model, match, options, subPopulate, justOne, count) {\n  // might have passed an object specifying all arguments\n  let obj = null;\n  if (arguments.length === 1) {\n    if (path instanceof PopulateOptions) {\n      return [path];\n    }\n\n    if (Array.isArray(path)) {\n      const singles = makeSingles(path);\n      return singles.map(o => exports.populate(o)[0]);\n    }\n\n    if (exports.isObject(path)) {\n      obj = Object.assign({}, path);\n    } else {\n      obj = { path: path };\n    }\n  } else if (typeof model === 'object') {\n    obj = {\n      path: path,\n      select: select,\n      match: model,\n      options: match\n    };\n  } else {\n    obj = {\n      path: path,\n      select: select,\n      model: model,\n      match: match,\n      options: options,\n      populate: subPopulate,\n      justOne: justOne,\n      count: count\n    };\n  }\n\n  if (typeof obj.path !== 'string') {\n    throw new TypeError('utils.populate: invalid path. Expected string. Got typeof `' + typeof path + '`');\n  }\n\n  return _populateObj(obj);\n\n  // The order of select/conditions args is opposite Model.find but\n  // necessary to keep backward compatibility (select could be\n  // an array, string, or object literal).\n  function makeSingles(arr) {\n    const ret = [];\n    arr.forEach(function(obj) {\n      if (/[\\s]/.test(obj.path)) {\n        const paths = obj.path.split(' ');\n        paths.forEach(function(p) {\n          const copy = Object.assign({}, obj);\n          copy.path = p;\n          ret.push(copy);\n        });\n      } else {\n        ret.push(obj);\n      }\n    });\n\n    return ret;\n  }\n};\n\nfunction _populateObj(obj) {\n  if (Array.isArray(obj.populate)) {\n    const ret = [];\n    obj.populate.forEach(function(obj) {\n      if (/[\\s]/.test(obj.path)) {\n        const copy = Object.assign({}, obj);\n        const paths = copy.path.split(' ');\n        paths.forEach(function(p) {\n          copy.path = p;\n          ret.push(exports.populate(copy)[0]);\n        });\n      } else {\n        ret.push(exports.populate(obj)[0]);\n      }\n    });\n    obj.populate = exports.populate(ret);\n  } else if (obj.populate != null && typeof obj.populate === 'object') {\n    obj.populate = exports.populate(obj.populate);\n  }\n\n  const ret = [];\n  const paths = obj.path.split(' ');\n  if (obj.options != null) {\n    obj.options = exports.clone(obj.options);\n  }\n\n  for (const path of paths) {\n    ret.push(new PopulateOptions(Object.assign({}, obj, { path: path })));\n  }\n\n  return ret;\n}\n\n/*!\n * Return the value of `obj` at the given `path`.\n *\n * @param {String} path\n * @param {Object} obj\n */\n\nexports.getValue = function(path, obj, map) {\n  return mpath.get(path, obj, '_doc', map);\n};\n\n/*!\n * Sets the value of `obj` at the given `path`.\n *\n * @param {String} path\n * @param {Anything} val\n * @param {Object} obj\n */\n\nexports.setValue = function(path, val, obj, map, _copying) {\n  mpath.set(path, val, obj, '_doc', map, _copying);\n};\n\n/*!\n * Returns an array of values from object `o`.\n *\n * @param {Object} o\n * @return {Array}\n * @private\n */\n\nexports.object = {};\nexports.object.vals = function vals(o) {\n  const keys = Object.keys(o);\n  let i = keys.length;\n  const ret = [];\n\n  while (i--) {\n    ret.push(o[keys[i]]);\n  }\n\n  return ret;\n};\n\n/*!\n * @see exports.options\n */\n\nexports.object.shallowCopy = exports.options;\n\n/*!\n * Safer helper for hasOwnProperty checks\n *\n * @param {Object} obj\n * @param {String} prop\n */\n\nconst hop = Object.prototype.hasOwnProperty;\nexports.object.hasOwnProperty = function(obj, prop) {\n  return hop.call(obj, prop);\n};\n\n/*!\n * Determine if `val` is null or undefined\n *\n * @return {Boolean}\n */\n\nexports.isNullOrUndefined = function(val) {\n  return val === null || val === undefined;\n};\n\n/*!\n * ignore\n */\n\nexports.array = {};\n\n/*!\n * Flattens an array.\n *\n * [ 1, [ 2, 3, [4] ]] -> [1,2,3,4]\n *\n * @param {Array} arr\n * @param {Function} [filter] If passed, will be invoked with each item in the array. If `filter` returns a falsy value, the item will not be included in the results.\n * @return {Array}\n * @private\n */\n\nexports.array.flatten = function flatten(arr, filter, ret) {\n  ret || (ret = []);\n\n  arr.forEach(function(item) {\n    if (Array.isArray(item)) {\n      flatten(item, filter, ret);\n    } else {\n      if (!filter || filter(item)) {\n        ret.push(item);\n      }\n    }\n  });\n\n  return ret;\n};\n\n/*!\n * ignore\n */\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexports.hasUserDefinedProperty = function(obj, key) {\n  if (obj == null) {\n    return false;\n  }\n\n  if (Array.isArray(key)) {\n    for (const k of key) {\n      if (exports.hasUserDefinedProperty(obj, k)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  if (_hasOwnProperty.call(obj, key)) {\n    return true;\n  }\n  if (typeof obj === 'object' && key in obj) {\n    const v = obj[key];\n    return v !== Object.prototype[key] && v !== Array.prototype[key];\n  }\n\n  return false;\n};\n\n/*!\n * ignore\n */\n\nconst MAX_ARRAY_INDEX = Math.pow(2, 32) - 1;\n\nexports.isArrayIndex = function(val) {\n  if (typeof val === 'number') {\n    return val >= 0 && val <= MAX_ARRAY_INDEX;\n  }\n  if (typeof val === 'string') {\n    if (!/^\\d+$/.test(val)) {\n      return false;\n    }\n    val = +val;\n    return val >= 0 && val <= MAX_ARRAY_INDEX;\n  }\n\n  return false;\n};\n\n/*!\n * Removes duplicate values from an array\n *\n * [1, 2, 3, 3, 5] => [1, 2, 3, 5]\n * [ ObjectId(\"550988ba0c19d57f697dc45e\"), ObjectId(\"550988ba0c19d57f697dc45e\") ]\n *    => [ObjectId(\"550988ba0c19d57f697dc45e\")]\n *\n * @param {Array} arr\n * @return {Array}\n * @private\n */\n\nexports.array.unique = function(arr) {\n  const primitives = new Set();\n  const ids = new Set();\n  const ret = [];\n\n  for (const item of arr) {\n    if (typeof item === 'number' || typeof item === 'string' || item == null) {\n      if (primitives.has(item)) {\n        continue;\n      }\n      ret.push(item);\n      primitives.add(item);\n    } else if (item instanceof ObjectId) {\n      if (ids.has(item.toString())) {\n        continue;\n      }\n      ret.push(item);\n      ids.add(item.toString());\n    } else {\n      ret.push(item);\n    }\n  }\n\n  return ret;\n};\n\n/*!\n * Determines if two buffers are equal.\n *\n * @param {Buffer} a\n * @param {Object} b\n */\n\nexports.buffer = {};\nexports.buffer.areEqual = function(a, b) {\n  if (!Buffer.isBuffer(a)) {\n    return false;\n  }\n  if (!Buffer.isBuffer(b)) {\n    return false;\n  }\n  if (a.length !== b.length) {\n    return false;\n  }\n  for (let i = 0, len = a.length; i < len; ++i) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n};\n\nexports.getFunctionName = getFunctionName;\n/*!\n * Decorate buffers\n */\n\nexports.decorate = function(destination, source) {\n  for (const key in source) {\n    if (specialProperties.has(key)) {\n      continue;\n    }\n    destination[key] = source[key];\n  }\n};\n\n/**\n * merges to with a copy of from\n *\n * @param {Object} to\n * @param {Object} fromObj\n * @api private\n */\n\nexports.mergeClone = function(to, fromObj) {\n  if (isMongooseObject(fromObj)) {\n    fromObj = fromObj.toObject({\n      transform: false,\n      virtuals: false,\n      depopulate: true,\n      getters: false,\n      flattenDecimals: false\n    });\n  }\n  const keys = Object.keys(fromObj);\n  const len = keys.length;\n  let i = 0;\n  let key;\n\n  while (i < len) {\n    key = keys[i++];\n    if (specialProperties.has(key)) {\n      continue;\n    }\n    if (typeof to[key] === 'undefined') {\n      to[key] = exports.clone(fromObj[key], {\n        transform: false,\n        virtuals: false,\n        depopulate: true,\n        getters: false,\n        flattenDecimals: false\n      });\n    } else {\n      let val = fromObj[key];\n      if (val != null && val.valueOf && !(val instanceof Date)) {\n        val = val.valueOf();\n      }\n      if (exports.isObject(val)) {\n        let obj = val;\n        if (isMongooseObject(val) && !val.isMongooseBuffer) {\n          obj = obj.toObject({\n            transform: false,\n            virtuals: false,\n            depopulate: true,\n            getters: false,\n            flattenDecimals: false\n          });\n        }\n        if (val.isMongooseBuffer) {\n          obj = Buffer.from(obj);\n        }\n        exports.mergeClone(to[key], obj);\n      } else {\n        to[key] = exports.clone(val, {\n          flattenDecimals: false\n        });\n      }\n    }\n  }\n};\n\n/**\n * Executes a function on each element of an array (like _.each)\n *\n * @param {Array} arr\n * @param {Function} fn\n * @api private\n */\n\nexports.each = function(arr, fn) {\n  for (const item of arr) {\n    fn(item);\n  }\n};\n\n/*!\n * ignore\n */\n\nexports.getOption = function(name) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n\n  for (const source of sources) {\n    if (source[name] != null) {\n      return source[name];\n    }\n  }\n\n  return null;\n};\n\n/*!\n * ignore\n */\n\nexports.noop = function() {};\n\nexports.errorToPOJO = function errorToPOJO(error) {\n  const isError = error instanceof Error;\n  if (!isError) {\n    throw new Error('`error` must be `instanceof Error`.');\n  }\n\n  const ret = {};\n  for (const properyName of Object.getOwnPropertyNames(error)) {\n    ret[properyName] = error[properyName];\n  }\n  return ret;\n};\n\nexports.nodeMajorVersion = parseInt(process.versions.node.split('.')[0], 10);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}