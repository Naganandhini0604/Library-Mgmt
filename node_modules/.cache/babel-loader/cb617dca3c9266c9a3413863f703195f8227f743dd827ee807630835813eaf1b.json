{"ast":null,"code":"'use strict';\n\nconst Document = require('../document');\nconst immediate = require('../helpers/immediate');\nconst internalToObjectOptions = require('../options').internalToObjectOptions;\nconst promiseOrCallback = require('../helpers/promiseOrCallback');\nconst documentArrayParent = require('../helpers/symbols').documentArrayParent;\nmodule.exports = Subdocument;\n\n/**\n * Subdocument constructor.\n *\n * @inherits Document\n * @api private\n */\n\nfunction Subdocument(value, fields, parent, skipId, options) {\n  this.$isSingleNested = true;\n  if (options != null && options.path != null) {\n    this.$basePath = options.path;\n  }\n  const hasPriorDoc = options != null && options.priorDoc;\n  let initedPaths = null;\n  if (hasPriorDoc) {\n    this._doc = Object.assign({}, options.priorDoc._doc);\n    delete this._doc[this.$__schema.options.discriminatorKey];\n    initedPaths = Object.keys(options.priorDoc._doc || {}).filter(key => key !== this.$__schema.options.discriminatorKey);\n  }\n  if (parent != null) {\n    // If setting a nested path, should copy isNew from parent re: gh-7048\n    options = Object.assign({}, options, {\n      isNew: parent.isNew,\n      defaults: parent.$__.$options.defaults\n    });\n  }\n  Document.call(this, value, fields, skipId, options);\n  if (hasPriorDoc) {\n    for (const key of initedPaths) {\n      if (!this.$__.activePaths.states.modify[key] && !this.$__.activePaths.states.default[key] && !this.$__.$setCalled.has(key)) {\n        const schematype = this.$__schema.path(key);\n        const def = schematype == null ? void 0 : schematype.getDefault(this);\n        if (def === void 0) {\n          delete this._doc[key];\n        } else {\n          this._doc[key] = def;\n          this.$__.activePaths.default(key);\n        }\n      }\n    }\n    delete options.priorDoc;\n    delete this.$__.$options.priorDoc;\n  }\n}\nSubdocument.prototype = Object.create(Document.prototype);\nSubdocument.prototype.toBSON = function () {\n  return this.toObject(internalToObjectOptions);\n};\n\n/**\n * Used as a stub for middleware\n *\n * ####NOTE:\n *\n * _This is a no-op. Does not actually save the doc to the db._\n *\n * @param {Function} [fn]\n * @return {Promise} resolved Promise\n * @api private\n */\n\nSubdocument.prototype.save = function (options, fn) {\n  if (typeof options === 'function') {\n    fn = options;\n    options = {};\n  }\n  options = options || {};\n  if (!options.suppressWarning) {\n    console.warn('mongoose: calling `save()` on a subdoc does **not** save ' + 'the document to MongoDB, it only runs save middleware. ' + 'Use `subdoc.save({ suppressWarning: true })` to hide this warning ' + 'if you\\'re sure this behavior is right for your app.');\n  }\n  return promiseOrCallback(fn, cb => {\n    this.$__save(cb);\n  });\n};\n\n/**\n * Used as a stub for middleware\n *\n * ####NOTE:\n *\n * _This is a no-op. Does not actually save the doc to the db._\n *\n * @param {Function} [fn]\n * @method $__save\n * @api private\n */\n\nSubdocument.prototype.$__save = function (fn) {\n  return immediate(() => fn(null, this));\n};\nSubdocument.prototype.$isValid = function (path) {\n  if (this.$__parent && this.$basePath) {\n    return this.$__parent.$isValid([this.$basePath, path].join('.'));\n  }\n  return Document.prototype.$isValid.call(this, path);\n};\nSubdocument.prototype.markModified = function (path) {\n  Document.prototype.markModified.call(this, path);\n  if (this.$__parent && this.$basePath) {\n    if (this.$__parent.isDirectModified(this.$basePath)) {\n      return;\n    }\n    this.$__parent.markModified([this.$basePath, path].join('.'), this);\n  }\n};\nSubdocument.prototype.isModified = function (paths, modifiedPaths) {\n  if (this.$__parent && this.$basePath) {\n    if (Array.isArray(paths) || typeof paths === 'string') {\n      paths = Array.isArray(paths) ? paths : paths.split(' ');\n      paths = paths.map(p => [this.$basePath, p].join('.'));\n      return this.$__parent.isModified(paths, modifiedPaths);\n    }\n    return this.$__parent.isModified(this.$basePath);\n  }\n  return Document.prototype.isModified.call(this, paths, modifiedPaths);\n};\n\n/**\n * Marks a path as valid, removing existing validation errors.\n *\n * @param {String} path the field to mark as valid\n * @api private\n * @method $markValid\n * @receiver Subdocument\n */\n\nSubdocument.prototype.$markValid = function (path) {\n  Document.prototype.$markValid.call(this, path);\n  if (this.$__parent && this.$basePath) {\n    this.$__parent.$markValid([this.$basePath, path].join('.'));\n  }\n};\n\n/*!\n * ignore\n */\n\nSubdocument.prototype.invalidate = function (path, err, val) {\n  // Hack: array subdocuments' validationError is equal to the owner doc's,\n  // so validating an array subdoc gives the top-level doc back. Temporary\n  // workaround for #5208 so we don't have circular errors.\n  if (err !== this.ownerDocument().$__.validationError) {\n    Document.prototype.invalidate.call(this, path, err, val);\n  }\n  if (this.$__parent && this.$basePath) {\n    this.$__parent.invalidate([this.$basePath, path].join('.'), err, val);\n  } else if (err.kind === 'cast' || err.name === 'CastError') {\n    throw err;\n  }\n  return this.ownerDocument().$__.validationError;\n};\n\n/*!\n * ignore\n */\n\nSubdocument.prototype.$ignore = function (path) {\n  Document.prototype.$ignore.call(this, path);\n  if (this.$__parent && this.$basePath) {\n    this.$__parent.$ignore([this.$basePath, path].join('.'));\n  }\n};\n\n/**\n * Returns the top level document of this sub-document.\n *\n * @return {Document}\n */\n\nSubdocument.prototype.ownerDocument = function () {\n  if (this.$__.ownerDocument) {\n    return this.$__.ownerDocument;\n  }\n  let parent = this.$__parent;\n  if (!parent) {\n    return this;\n  }\n  while (parent.$__parent || parent[documentArrayParent]) {\n    parent = parent.$__parent || parent[documentArrayParent];\n  }\n  this.$__.ownerDocument = parent;\n  return this.$__.ownerDocument;\n};\n\n/**\n * Returns this sub-documents parent document.\n *\n * @api public\n */\n\nSubdocument.prototype.parent = function () {\n  return this.$__parent;\n};\n\n/**\n * Returns this sub-documents parent document.\n *\n * @api public\n */\n\nSubdocument.prototype.$parent = Subdocument.prototype.parent;\n\n/*!\n * no-op for hooks\n */\n\nSubdocument.prototype.$__remove = function (cb) {\n  return cb(null, this);\n};\n\n/**\n * Null-out this subdoc\n *\n * @param {Object} [options]\n * @param {Function} [callback] optional callback for compatibility with Document.prototype.remove\n */\n\nSubdocument.prototype.remove = function (options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = null;\n  }\n  registerRemoveListener(this);\n\n  // If removing entire doc, no need to remove subdoc\n  if (!options || !options.noop) {\n    this.$__parent.set(this.$basePath, null);\n  }\n  if (typeof callback === 'function') {\n    callback(null);\n  }\n};\n\n/*!\n * ignore\n */\n\nSubdocument.prototype.populate = function () {\n  throw new Error('Mongoose does not support calling populate() on nested ' + 'docs. Instead of `doc.nested.populate(\"path\")`, use ' + '`doc.populate(\"nested.path\")`');\n};\n\n/*!\n * Registers remove event listeners for triggering\n * on subdocuments.\n *\n * @param {Subdocument} sub\n * @api private\n */\n\nfunction registerRemoveListener(sub) {\n  let owner = sub.ownerDocument();\n  function emitRemove() {\n    owner.removeListener('save', emitRemove);\n    owner.removeListener('remove', emitRemove);\n    sub.emit('remove', sub);\n    sub.constructor.emit('remove', sub);\n    owner = sub = null;\n  }\n  owner.on('save', emitRemove);\n  owner.on('remove', emitRemove);\n}","map":{"version":3,"names":["Document","require","immediate","internalToObjectOptions","promiseOrCallback","documentArrayParent","module","exports","Subdocument","value","fields","parent","skipId","options","$isSingleNested","path","$basePath","hasPriorDoc","priorDoc","initedPaths","_doc","Object","assign","$__schema","discriminatorKey","keys","filter","key","isNew","defaults","$__","$options","call","activePaths","states","modify","default","$setCalled","has","schematype","def","getDefault","prototype","create","toBSON","toObject","save","fn","suppressWarning","console","warn","cb","$__save","$isValid","$__parent","join","markModified","isDirectModified","isModified","paths","modifiedPaths","Array","isArray","split","map","p","$markValid","invalidate","err","val","ownerDocument","validationError","kind","name","$ignore","$parent","$__remove","remove","callback","registerRemoveListener","noop","set","populate","Error","sub","owner","emitRemove","removeListener","emit","constructor","on"],"sources":["/home/ctl/Documents/nodejs/node_modules/mongoose/lib/types/subdocument.js"],"sourcesContent":["'use strict';\n\nconst Document = require('../document');\nconst immediate = require('../helpers/immediate');\nconst internalToObjectOptions = require('../options').internalToObjectOptions;\nconst promiseOrCallback = require('../helpers/promiseOrCallback');\n\nconst documentArrayParent = require('../helpers/symbols').documentArrayParent;\n\nmodule.exports = Subdocument;\n\n/**\n * Subdocument constructor.\n *\n * @inherits Document\n * @api private\n */\n\nfunction Subdocument(value, fields, parent, skipId, options) {\n  this.$isSingleNested = true;\n  if (options != null && options.path != null) {\n    this.$basePath = options.path;\n  }\n  const hasPriorDoc = options != null && options.priorDoc;\n  let initedPaths = null;\n  if (hasPriorDoc) {\n    this._doc = Object.assign({}, options.priorDoc._doc);\n    delete this._doc[this.$__schema.options.discriminatorKey];\n    initedPaths = Object.keys(options.priorDoc._doc || {}).\n      filter(key => key !== this.$__schema.options.discriminatorKey);\n  }\n  if (parent != null) {\n    // If setting a nested path, should copy isNew from parent re: gh-7048\n    options = Object.assign({}, options, {\n      isNew: parent.isNew,\n      defaults: parent.$__.$options.defaults\n    });\n  }\n  Document.call(this, value, fields, skipId, options);\n\n  if (hasPriorDoc) {\n    for (const key of initedPaths) {\n      if (!this.$__.activePaths.states.modify[key] &&\n          !this.$__.activePaths.states.default[key] &&\n          !this.$__.$setCalled.has(key)) {\n        const schematype = this.$__schema.path(key);\n        const def = schematype == null ? void 0 : schematype.getDefault(this);\n        if (def === void 0) {\n          delete this._doc[key];\n        } else {\n          this._doc[key] = def;\n          this.$__.activePaths.default(key);\n        }\n      }\n    }\n\n    delete options.priorDoc;\n    delete this.$__.$options.priorDoc;\n  }\n}\n\nSubdocument.prototype = Object.create(Document.prototype);\n\nSubdocument.prototype.toBSON = function() {\n  return this.toObject(internalToObjectOptions);\n};\n\n/**\n * Used as a stub for middleware\n *\n * ####NOTE:\n *\n * _This is a no-op. Does not actually save the doc to the db._\n *\n * @param {Function} [fn]\n * @return {Promise} resolved Promise\n * @api private\n */\n\nSubdocument.prototype.save = function(options, fn) {\n  if (typeof options === 'function') {\n    fn = options;\n    options = {};\n  }\n  options = options || {};\n\n  if (!options.suppressWarning) {\n    console.warn('mongoose: calling `save()` on a subdoc does **not** save ' +\n      'the document to MongoDB, it only runs save middleware. ' +\n      'Use `subdoc.save({ suppressWarning: true })` to hide this warning ' +\n      'if you\\'re sure this behavior is right for your app.');\n  }\n\n  return promiseOrCallback(fn, cb => {\n    this.$__save(cb);\n  });\n};\n\n/**\n * Used as a stub for middleware\n *\n * ####NOTE:\n *\n * _This is a no-op. Does not actually save the doc to the db._\n *\n * @param {Function} [fn]\n * @method $__save\n * @api private\n */\n\nSubdocument.prototype.$__save = function(fn) {\n  return immediate(() => fn(null, this));\n};\n\nSubdocument.prototype.$isValid = function(path) {\n  if (this.$__parent && this.$basePath) {\n    return this.$__parent.$isValid([this.$basePath, path].join('.'));\n  }\n  return Document.prototype.$isValid.call(this, path);\n};\n\nSubdocument.prototype.markModified = function(path) {\n  Document.prototype.markModified.call(this, path);\n\n  if (this.$__parent && this.$basePath) {\n    if (this.$__parent.isDirectModified(this.$basePath)) {\n      return;\n    }\n    this.$__parent.markModified([this.$basePath, path].join('.'), this);\n  }\n};\n\nSubdocument.prototype.isModified = function(paths, modifiedPaths) {\n  if (this.$__parent && this.$basePath) {\n    if (Array.isArray(paths) || typeof paths === 'string') {\n      paths = (Array.isArray(paths) ? paths : paths.split(' '));\n      paths = paths.map(p => [this.$basePath, p].join('.'));\n\n      return this.$__parent.isModified(paths, modifiedPaths);\n    }\n\n    return this.$__parent.isModified(this.$basePath);\n  }\n\n  return Document.prototype.isModified.call(this, paths, modifiedPaths);\n};\n\n/**\n * Marks a path as valid, removing existing validation errors.\n *\n * @param {String} path the field to mark as valid\n * @api private\n * @method $markValid\n * @receiver Subdocument\n */\n\nSubdocument.prototype.$markValid = function(path) {\n  Document.prototype.$markValid.call(this, path);\n  if (this.$__parent && this.$basePath) {\n    this.$__parent.$markValid([this.$basePath, path].join('.'));\n  }\n};\n\n/*!\n * ignore\n */\n\nSubdocument.prototype.invalidate = function(path, err, val) {\n  // Hack: array subdocuments' validationError is equal to the owner doc's,\n  // so validating an array subdoc gives the top-level doc back. Temporary\n  // workaround for #5208 so we don't have circular errors.\n  if (err !== this.ownerDocument().$__.validationError) {\n    Document.prototype.invalidate.call(this, path, err, val);\n  }\n\n  if (this.$__parent && this.$basePath) {\n    this.$__parent.invalidate([this.$basePath, path].join('.'), err, val);\n  } else if (err.kind === 'cast' || err.name === 'CastError') {\n    throw err;\n  }\n\n  return this.ownerDocument().$__.validationError;\n};\n\n/*!\n * ignore\n */\n\nSubdocument.prototype.$ignore = function(path) {\n  Document.prototype.$ignore.call(this, path);\n  if (this.$__parent && this.$basePath) {\n    this.$__parent.$ignore([this.$basePath, path].join('.'));\n  }\n};\n\n/**\n * Returns the top level document of this sub-document.\n *\n * @return {Document}\n */\n\nSubdocument.prototype.ownerDocument = function() {\n  if (this.$__.ownerDocument) {\n    return this.$__.ownerDocument;\n  }\n\n  let parent = this.$__parent;\n  if (!parent) {\n    return this;\n  }\n\n  while (parent.$__parent || parent[documentArrayParent]) {\n    parent = parent.$__parent || parent[documentArrayParent];\n  }\n\n  this.$__.ownerDocument = parent;\n  return this.$__.ownerDocument;\n};\n\n/**\n * Returns this sub-documents parent document.\n *\n * @api public\n */\n\nSubdocument.prototype.parent = function() {\n  return this.$__parent;\n};\n\n/**\n * Returns this sub-documents parent document.\n *\n * @api public\n */\n\nSubdocument.prototype.$parent = Subdocument.prototype.parent;\n\n/*!\n * no-op for hooks\n */\n\nSubdocument.prototype.$__remove = function(cb) {\n  return cb(null, this);\n};\n\n/**\n * Null-out this subdoc\n *\n * @param {Object} [options]\n * @param {Function} [callback] optional callback for compatibility with Document.prototype.remove\n */\n\nSubdocument.prototype.remove = function(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = null;\n  }\n  registerRemoveListener(this);\n\n  // If removing entire doc, no need to remove subdoc\n  if (!options || !options.noop) {\n    this.$__parent.set(this.$basePath, null);\n  }\n\n  if (typeof callback === 'function') {\n    callback(null);\n  }\n};\n\n/*!\n * ignore\n */\n\nSubdocument.prototype.populate = function() {\n  throw new Error('Mongoose does not support calling populate() on nested ' +\n    'docs. Instead of `doc.nested.populate(\"path\")`, use ' +\n    '`doc.populate(\"nested.path\")`');\n};\n\n/*!\n * Registers remove event listeners for triggering\n * on subdocuments.\n *\n * @param {Subdocument} sub\n * @api private\n */\n\nfunction registerRemoveListener(sub) {\n  let owner = sub.ownerDocument();\n\n  function emitRemove() {\n    owner.removeListener('save', emitRemove);\n    owner.removeListener('remove', emitRemove);\n    sub.emit('remove', sub);\n    sub.constructor.emit('remove', sub);\n    owner = sub = null;\n  }\n\n  owner.on('save', emitRemove);\n  owner.on('remove', emitRemove);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}